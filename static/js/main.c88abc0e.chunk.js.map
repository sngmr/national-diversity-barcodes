{"version":3,"sources":["FlagsData.js","ImageDetermine.js","FlagGenerator.js","MashupFlags.js","App.js","index.js"],"names":["createFlagsDataInstance","getAllNationalFlags","data","countries","getImageColorData","canvas","pixelCount","width","height","countedColorDataObject","quality","pixels","offset","r","g","b","pixelArray","i","push","createPixelArray","getContext","getImageData","getImagePixelArrayFromCanvas","map","rgbList","value","toString","slice","join","reduce","total","Object","entries","color","count","area","sort","a","filter","v","SVG_WIDTH","SVG_HEIGHT","SVG_ROOT_TEMPLATE","name","type","attributes","xmlns","version","children","x","y","fill","SVG_RECT_TEMPLATE","generate1","isHorizontalBorder","colorList","colors","shuffle","toUpperCase","baseLength","whiteColorLen","length","eachColorLen","root","deepCopy","rect","svgson","generate2","flagAndColorDataList","colorAndAreaRateList","flagAndColorData","colorData","colorsTotalLen","totalArea","fillRate","colorLenTotal","colorLen","Math","round","org","JSON","parse","stringify","MashupFlags","useState","flagsData","setFlagsData","selectedFlagsData","setSelectedFlagsData","selectedFlagsColorData","setSelectedFlagsColorData","useEffect","FlagsData","then","forEach","flagData","document","getElementById","iso2code","ctx","Canvg","from","process","canvg","render","tidyCanvasElement","createCountryTr","isSelected","indexOf","onClick","className","onGenerateFlagsButtonPressed","ReactGA","event","category","action","drawCanvas","canvasId","svg","FlagGen","style","border","overflowY","newSelectedFlagsColorData","ImageDetermine","id","flagDataAndColorData","backgroundColor","margin","marginBottom","initialize","pageview","window","location","pathname","search","App","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.c88abc0e.chunk.js","sourcesContent":["// import axios from \"axios\";\n\nconst createFlagsDataInstance = function() {\n    return {\n        async getAllNationalFlags() {\n            return {data: countries};\n            // return await axios.get('https://restcountries.eu/rest/v2/all');  API無くなっちゃった...\n        }\n    }\n}\n\nexport default createFlagsDataInstance();\n\n// 国一覧\n// API無くなったので、適当なAPIからもらってきてローカル保存\nconst countries =\n    [\n        {\n            \"iso2code\": \"aw\",\n            \"name\": \"Aruba\"\n        },\n        {\n            \"iso2code\": \"af\",\n            \"name\": \"Afghanistan\"\n        },\n        {\n            \"iso2code\": \"ao\",\n            \"name\": \"Angola\"\n        },\n        {\n            \"iso2code\": \"al\",\n            \"name\": \"Albania\"\n        },\n        {\n            \"iso2code\": \"ad\",\n            \"name\": \"Andorra\"\n        },\n        {\n            \"iso2code\": \"ae\",\n            \"name\": \"United Arab Emirates\"\n        },\n        {\n            \"iso2code\": \"ar\",\n            \"name\": \"Argentina\"\n        },\n        {\n            \"iso2code\": \"am\",\n            \"name\": \"Armenia\"\n        },\n        {\n            \"iso2code\": \"as\",\n            \"name\": \"American Samoa\"\n        },\n        {\n            \"iso2code\": \"ag\",\n            \"name\": \"Antigua and Barbuda\"\n        },\n        {\n            \"iso2code\": \"au\",\n            \"name\": \"Australia\"\n        },\n        {\n            \"iso2code\": \"at\",\n            \"name\": \"Austria\"\n        },\n        {\n            \"iso2code\": \"az\",\n            \"name\": \"Azerbaijan\"\n        },\n        {\n            \"iso2code\": \"bi\",\n            \"name\": \"Burundi\"\n        },\n        {\n            \"iso2code\": \"be\",\n            \"name\": \"Belgium\"\n        },\n        {\n            \"iso2code\": \"bj\",\n            \"name\": \"Benin\"\n        },\n        {\n            \"iso2code\": \"bf\",\n            \"name\": \"Burkina Faso\"\n        },\n        {\n            \"iso2code\": \"bd\",\n            \"name\": \"Bangladesh\"\n        },\n        {\n            \"iso2code\": \"bg\",\n            \"name\": \"Bulgaria\"\n        },\n        {\n            \"iso2code\": \"bh\",\n            \"name\": \"Bahrain\"\n        },\n        {\n            \"iso2code\": \"bs\",\n            \"name\": \"Bahamas, The\"\n        },\n        {\n            \"iso2code\": \"ba\",\n            \"name\": \"Bosnia and Herzegovina\"\n        },\n        {\n            \"iso2code\": \"by\",\n            \"name\": \"Belarus\"\n        },\n        {\n            \"iso2code\": \"bz\",\n            \"name\": \"Belize\"\n        },\n        {\n            \"iso2code\": \"bm\",\n            \"name\": \"Bermuda\"\n        },\n        {\n            \"iso2code\": \"bo\",\n            \"name\": \"Bolivia\"\n        },\n        {\n            \"iso2code\": \"br\",\n            \"name\": \"Brazil\"\n        },\n        {\n            \"iso2code\": \"bb\",\n            \"name\": \"Barbados\"\n        },\n        {\n            \"iso2code\": \"bn\",\n            \"name\": \"Brunei Darussalam\"\n        },\n        {\n            \"iso2code\": \"bt\",\n            \"name\": \"Bhutan\"\n        },\n        {\n            \"iso2code\": \"bw\",\n            \"name\": \"Botswana\"\n        },\n        {\n            \"iso2code\": \"cf\",\n            \"name\": \"Central African Republic\"\n        },\n        {\n            \"iso2code\": \"ca\",\n            \"name\": \"Canada\"\n        },\n        {\n            \"iso2code\": \"ch\",\n            \"name\": \"Switzerland\"\n        },\n        {\n            \"iso2code\": \"cl\",\n            \"name\": \"Chile\"\n        },\n        {\n            \"iso2code\": \"cn\",\n            \"name\": \"China\"\n        },\n        {\n            \"iso2code\": \"ci\",\n            \"name\": \"Cote d'Ivoire\"\n        },\n        {\n            \"iso2code\": \"cm\",\n            \"name\": \"Cameroon\"\n        },\n        {\n            \"iso2code\": \"cd\",\n            \"name\": \"Congo, Dem. Rep.\"\n        },\n        {\n            \"iso2code\": \"cg\",\n            \"name\": \"Congo, Rep.\"\n        },\n        {\n            \"iso2code\": \"co\",\n            \"name\": \"Colombia\"\n        },\n        {\n            \"iso2code\": \"km\",\n            \"name\": \"Comoros\"\n        },\n        {\n            \"iso2code\": \"cv\",\n            \"name\": \"Cabo Verde\"\n        },\n        {\n            \"iso2code\": \"cr\",\n            \"name\": \"Costa Rica\"\n        },\n        {\n            \"iso2code\": \"cu\",\n            \"name\": \"Cuba\"\n        },\n        {\n            \"iso2code\": \"cw\",\n            \"name\": \"Curacao\"\n        },\n        {\n            \"iso2code\": \"ky\",\n            \"name\": \"Cayman Islands\"\n        },\n        {\n            \"iso2code\": \"cy\",\n            \"name\": \"Cyprus\"\n        },\n        {\n            \"iso2code\": \"cz\",\n            \"name\": \"Czech Republic\"\n        },\n        {\n            \"iso2code\": \"de\",\n            \"name\": \"Germany\"\n        },\n        {\n            \"iso2code\": \"dj\",\n            \"name\": \"Djibouti\"\n        },\n        {\n            \"iso2code\": \"dm\",\n            \"name\": \"Dominica\"\n        },\n        {\n            \"iso2code\": \"dk\",\n            \"name\": \"Denmark\"\n        },\n        {\n            \"iso2code\": \"do\",\n            \"name\": \"Dominican Republic\"\n        },\n        {\n            \"iso2code\": \"dz\",\n            \"name\": \"Algeria\"\n        },\n        {\n            \"iso2code\": \"ec\",\n            \"name\": \"Ecuador\"\n        },\n        {\n            \"iso2code\": \"eg\",\n            \"name\": \"Egypt, Arab Rep.\"\n        },\n        {\n            \"iso2code\": \"er\",\n            \"name\": \"Eritrea\"\n        },\n        {\n            \"iso2code\": \"es\",\n            \"name\": \"Spain\"\n        },\n        {\n            \"iso2code\": \"ee\",\n            \"name\": \"Estonia\"\n        },\n        {\n            \"iso2code\": \"et\",\n            \"name\": \"Ethiopia\"\n        },\n        {\n            \"iso2code\": \"fi\",\n            \"name\": \"Finland\"\n        },\n        {\n            \"iso2code\": \"fj\",\n            \"name\": \"Fiji\"\n        },\n        {\n            \"iso2code\": \"fr\",\n            \"name\": \"France\"\n        },\n        {\n            \"iso2code\": \"fo\",\n            \"name\": \"Faroe Islands\"\n        },\n        {\n            \"iso2code\": \"fm\",\n            \"name\": \"Micronesia, Fed. Sts.\"\n        },\n        {\n            \"iso2code\": \"ga\",\n            \"name\": \"Gabon\"\n        },\n        {\n            \"iso2code\": \"gb\",\n            \"name\": \"United Kingdom\"\n        },\n        {\n            \"iso2code\": \"ge\",\n            \"name\": \"Georgia\"\n        },\n        {\n            \"iso2code\": \"gh\",\n            \"name\": \"Ghana\"\n        },\n        {\n            \"iso2code\": \"gi\",\n            \"name\": \"Gibraltar\"\n        },\n        {\n            \"iso2code\": \"gn\",\n            \"name\": \"Guinea\"\n        },\n        {\n            \"iso2code\": \"gm\",\n            \"name\": \"Gambia, The\"\n        },\n        {\n            \"iso2code\": \"gw\",\n            \"name\": \"Guinea-Bissau\"\n        },\n        {\n            \"iso2code\": \"gq\",\n            \"name\": \"Equatorial Guinea\"\n        },\n        {\n            \"iso2code\": \"gr\",\n            \"name\": \"Greece\"\n        },\n        {\n            \"iso2code\": \"gd\",\n            \"name\": \"Grenada\"\n        },\n        {\n            \"iso2code\": \"gl\",\n            \"name\": \"Greenland\"\n        },\n        {\n            \"iso2code\": \"gt\",\n            \"name\": \"Guatemala\"\n        },\n        {\n            \"iso2code\": \"gu\",\n            \"name\": \"Guam\"\n        },\n        {\n            \"iso2code\": \"gy\",\n            \"name\": \"Guyana\"\n        },\n        {\n            \"iso2code\": \"hk\",\n            \"name\": \"Hong Kong SAR, China\"\n        },\n        {\n            \"iso2code\": \"hn\",\n            \"name\": \"Honduras\"\n        },\n        {\n            \"iso2code\": \"hr\",\n            \"name\": \"Croatia\"\n        },\n        {\n            \"iso2code\": \"ht\",\n            \"name\": \"Haiti\"\n        },\n        {\n            \"iso2code\": \"hu\",\n            \"name\": \"Hungary\"\n        },\n        {\n            \"iso2code\": \"id\",\n            \"name\": \"Indonesia\"\n        },\n        {\n            \"iso2code\": \"im\",\n            \"name\": \"Isle of Man\"\n        },\n        {\n            \"iso2code\": \"in\",\n            \"name\": \"India\"\n        },\n        {\n            \"iso2code\": \"ie\",\n            \"name\": \"Ireland\"\n        },\n        {\n            \"iso2code\": \"ir\",\n            \"name\": \"Iran, Islamic Rep.\"\n        },\n        {\n            \"iso2code\": \"iq\",\n            \"name\": \"Iraq\"\n        },\n        {\n            \"iso2code\": \"is\",\n            \"name\": \"Iceland\"\n        },\n        {\n            \"iso2code\": \"il\",\n            \"name\": \"Israel\"\n        },\n        {\n            \"iso2code\": \"it\",\n            \"name\": \"Italy\"\n        },\n        {\n            \"iso2code\": \"jm\",\n            \"name\": \"Jamaica\"\n        },\n        {\n            \"iso2code\": \"jo\",\n            \"name\": \"Jordan\"\n        },\n        {\n            \"iso2code\": \"jp\",\n            \"name\": \"Japan\"\n        },\n        {\n            \"iso2code\": \"kz\",\n            \"name\": \"Kazakhstan\"\n        },\n        {\n            \"iso2code\": \"ke\",\n            \"name\": \"Kenya\"\n        },\n        {\n            \"iso2code\": \"kg\",\n            \"name\": \"Kyrgyz Republic\"\n        },\n        {\n            \"iso2code\": \"kh\",\n            \"name\": \"Cambodia\"\n        },\n        {\n            \"iso2code\": \"ki\",\n            \"name\": \"Kiribati\"\n        },\n        {\n            \"iso2code\": \"kn\",\n            \"name\": \"St. Kitts and Nevis\"\n        },\n        {\n            \"iso2code\": \"kr\",\n            \"name\": \"Korea, Rep.\"\n        },\n        {\n            \"iso2code\": \"kw\",\n            \"name\": \"Kuwait\"\n        },\n        {\n            \"iso2code\": \"la\",\n            \"name\": \"Lao PDR\"\n        },\n        {\n            \"iso2code\": \"lb\",\n            \"name\": \"Lebanon\"\n        },\n        {\n            \"iso2code\": \"lr\",\n            \"name\": \"Liberia\"\n        },\n        {\n            \"iso2code\": \"ly\",\n            \"name\": \"Libya\"\n        },\n        {\n            \"iso2code\": \"lc\",\n            \"name\": \"St. Lucia\"\n        },\n        {\n            \"iso2code\": \"li\",\n            \"name\": \"Liechtenstein\"\n        },\n        {\n            \"iso2code\": \"lk\",\n            \"name\": \"Sri Lanka\"\n        },\n        {\n            \"iso2code\": \"ls\",\n            \"name\": \"Lesotho\"\n        },\n        {\n            \"iso2code\": \"lt\",\n            \"name\": \"Lithuania\"\n        },\n        {\n            \"iso2code\": \"lu\",\n            \"name\": \"Luxembourg\"\n        },\n        {\n            \"iso2code\": \"lv\",\n            \"name\": \"Latvia\"\n        },\n        {\n            \"iso2code\": \"mo\",\n            \"name\": \"Macao SAR, China\"\n        },\n        {\n            \"iso2code\": \"mf\",\n            \"name\": \"St. Martin (French part)\"\n        },\n        {\n            \"iso2code\": \"ma\",\n            \"name\": \"Morocco\"\n        },\n        {\n            \"iso2code\": \"mc\",\n            \"name\": \"Monaco\"\n        },\n        {\n            \"iso2code\": \"md\",\n            \"name\": \"Moldova\"\n        },\n        {\n            \"iso2code\": \"mg\",\n            \"name\": \"Madagascar\"\n        },\n        {\n            \"iso2code\": \"mv\",\n            \"name\": \"Maldives\"\n        },\n        {\n            \"iso2code\": \"mx\",\n            \"name\": \"Mexico\"\n        },\n        {\n            \"iso2code\": \"mh\",\n            \"name\": \"Marshall Islands\"\n        },\n        {\n            \"iso2code\": \"mk\",\n            \"name\": \"North Macedonia\"\n        },\n        {\n            \"iso2code\": \"ml\",\n            \"name\": \"Mali\"\n        },\n        {\n            \"iso2code\": \"mt\",\n            \"name\": \"Malta\"\n        },\n        {\n            \"iso2code\": \"mm\",\n            \"name\": \"Myanmar\"\n        },\n        {\n            \"iso2code\": \"me\",\n            \"name\": \"Montenegro\"\n        },\n        {\n            \"iso2code\": \"mn\",\n            \"name\": \"Mongolia\"\n        },\n        {\n            \"iso2code\": \"mp\",\n            \"name\": \"Northern Mariana Islands\"\n        },\n        {\n            \"iso2code\": \"mz\",\n            \"name\": \"Mozambique\"\n        },\n        {\n            \"iso2code\": \"mr\",\n            \"name\": \"Mauritania\"\n        },\n        {\n            \"iso2code\": \"mu\",\n            \"name\": \"Mauritius\"\n        },\n        {\n            \"iso2code\": \"mw\",\n            \"name\": \"Malawi\"\n        },\n        {\n            \"iso2code\": \"my\",\n            \"name\": \"Malaysia\"\n        },\n        {\n            \"iso2code\": \"na\",\n            \"name\": \"Namibia\"\n        },\n        {\n            \"iso2code\": \"nc\",\n            \"name\": \"New Caledonia\"\n        },\n        {\n            \"iso2code\": \"ne\",\n            \"name\": \"Niger\"\n        },\n        {\n            \"iso2code\": \"ng\",\n            \"name\": \"Nigeria\"\n        },\n        {\n            \"iso2code\": \"ni\",\n            \"name\": \"Nicaragua\"\n        },\n        {\n            \"iso2code\": \"nl\",\n            \"name\": \"Netherlands\"\n        },\n        {\n            \"iso2code\": \"no\",\n            \"name\": \"Norway\"\n        },\n        {\n            \"iso2code\": \"np\",\n            \"name\": \"Nepal\"\n        },\n        {\n            \"iso2code\": \"nr\",\n            \"name\": \"Nauru\"\n        },\n        {\n            \"iso2code\": \"nz\",\n            \"name\": \"New Zealand\"\n        },\n        {\n            \"iso2code\": \"om\",\n            \"name\": \"Oman\"\n        },\n        {\n            \"iso2code\": \"pk\",\n            \"name\": \"Pakistan\"\n        },\n        {\n            \"iso2code\": \"pa\",\n            \"name\": \"Panama\"\n        },\n        {\n            \"iso2code\": \"pe\",\n            \"name\": \"Peru\"\n        },\n        {\n            \"iso2code\": \"ph\",\n            \"name\": \"Philippines\"\n        },\n        {\n            \"iso2code\": \"pw\",\n            \"name\": \"Palau\"\n        },\n        {\n            \"iso2code\": \"pg\",\n            \"name\": \"Papua New Guinea\"\n        },\n        {\n            \"iso2code\": \"pl\",\n            \"name\": \"Poland\"\n        },\n        {\n            \"iso2code\": \"pr\",\n            \"name\": \"Puerto Rico\"\n        },\n        {\n            \"iso2code\": \"kp\",\n            \"name\": \"Korea, Dem. People's Rep.\"\n        },\n        {\n            \"iso2code\": \"pt\",\n            \"name\": \"Portugal\"\n        },\n        {\n            \"iso2code\": \"py\",\n            \"name\": \"Paraguay\"\n        },\n        {\n            \"iso2code\": \"ps\",\n            \"name\": \"West Bank and Gaza\"\n        },\n        {\n            \"iso2code\": \"pf\",\n            \"name\": \"French Polynesia\"\n        },\n        {\n            \"iso2code\": \"qa\",\n            \"name\": \"Qatar\"\n        },\n        {\n            \"iso2code\": \"ro\",\n            \"name\": \"Romania\"\n        },\n        {\n            \"iso2code\": \"ru\",\n            \"name\": \"Russian Federation\"\n        },\n        {\n            \"iso2code\": \"rw\",\n            \"name\": \"Rwanda\"\n        },\n        {\n            \"iso2code\": \"sa\",\n            \"name\": \"Saudi Arabia\"\n        },\n        {\n            \"iso2code\": \"sd\",\n            \"name\": \"Sudan\"\n        },\n        {\n            \"iso2code\": \"sn\",\n            \"name\": \"Senegal\"\n        },\n        {\n            \"iso2code\": \"sg\",\n            \"name\": \"Singapore\"\n        },\n        {\n            \"iso2code\": \"sb\",\n            \"name\": \"Solomon Islands\"\n        },\n        {\n            \"iso2code\": \"sl\",\n            \"name\": \"Sierra Leone\"\n        },\n        {\n            \"iso2code\": \"sv\",\n            \"name\": \"El Salvador\"\n        },\n        {\n            \"iso2code\": \"sm\",\n            \"name\": \"San Marino\"\n        },\n        {\n            \"iso2code\": \"so\",\n            \"name\": \"Somalia\"\n        },\n        {\n            \"iso2code\": \"rs\",\n            \"name\": \"Serbia\"\n        },\n        {\n            \"iso2code\": \"ss\",\n            \"name\": \"South Sudan\"\n        },\n        {\n            \"iso2code\": \"st\",\n            \"name\": \"Sao Tome and Principe\"\n        },\n        {\n            \"iso2code\": \"sr\",\n            \"name\": \"Suriname\"\n        },\n        {\n            \"iso2code\": \"sk\",\n            \"name\": \"Slovak Republic\"\n        },\n        {\n            \"iso2code\": \"si\",\n            \"name\": \"Slovenia\"\n        },\n        {\n            \"iso2code\": \"se\",\n            \"name\": \"Sweden\"\n        },\n        {\n            \"iso2code\": \"sz\",\n            \"name\": \"Eswatini\"\n        },\n        {\n            \"iso2code\": \"sx\",\n            \"name\": \"Sint Maarten (Dutch part)\"\n        },\n        {\n            \"iso2code\": \"sc\",\n            \"name\": \"Seychelles\"\n        },\n        {\n            \"iso2code\": \"sy\",\n            \"name\": \"Syrian Arab Republic\"\n        },\n        {\n            \"iso2code\": \"tc\",\n            \"name\": \"Turks and Caicos Islands\"\n        },\n        {\n            \"iso2code\": \"td\",\n            \"name\": \"Chad\"\n        },\n        {\n            \"iso2code\": \"tg\",\n            \"name\": \"Togo\"\n        },\n        {\n            \"iso2code\": \"th\",\n            \"name\": \"Thailand\"\n        },\n        {\n            \"iso2code\": \"tj\",\n            \"name\": \"Tajikistan\"\n        },\n        {\n            \"iso2code\": \"tm\",\n            \"name\": \"Turkmenistan\"\n        },\n        {\n            \"iso2code\": \"tl\",\n            \"name\": \"Timor-Leste\"\n        },\n        {\n            \"iso2code\": \"to\",\n            \"name\": \"Tonga\"\n        },\n        {\n            \"iso2code\": \"tt\",\n            \"name\": \"Trinidad and Tobago\"\n        },\n        {\n            \"iso2code\": \"tn\",\n            \"name\": \"Tunisia\"\n        },\n        {\n            \"iso2code\": \"tr\",\n            \"name\": \"Turkey\"\n        },\n        {\n            \"iso2code\": \"tv\",\n            \"name\": \"Tuvalu\"\n        },\n        {\n            \"iso2code\": \"tw\",\n            \"name\": \"Taiwan, China\"\n        },\n        {\n            \"iso2code\": \"tz\",\n            \"name\": \"Tanzania\"\n        },\n        {\n            \"iso2code\": \"ug\",\n            \"name\": \"Uganda\"\n        },\n        {\n            \"iso2code\": \"ua\",\n            \"name\": \"Ukraine\"\n        },\n        {\n            \"iso2code\": \"uy\",\n            \"name\": \"Uruguay\"\n        },\n        {\n            \"iso2code\": \"us\",\n            \"name\": \"United States\"\n        },\n        {\n            \"iso2code\": \"uz\",\n            \"name\": \"Uzbekistan\"\n        },\n        {\n            \"iso2code\": \"vc\",\n            \"name\": \"St. Vincent and the Grenadines\"\n        },\n        {\n            \"iso2code\": \"ve\",\n            \"name\": \"Venezuela, RB\"\n        },\n        {\n            \"iso2code\": \"vg\",\n            \"name\": \"British Virgin Islands\"\n        },\n        {\n            \"iso2code\": \"vi\",\n            \"name\": \"Virgin Islands (U.S.)\"\n        },\n        {\n            \"iso2code\": \"vn\",\n            \"name\": \"Vietnam\"\n        },\n        {\n            \"iso2code\": \"vu\",\n            \"name\": \"Vanuatu\"\n        },\n        {\n            \"iso2code\": \"ws\",\n            \"name\": \"Samoa\"\n        },\n        {\n            \"iso2code\": \"xk\",\n            \"name\": \"Kosovo\"\n        },\n        {\n            \"iso2code\": \"ye\",\n            \"name\": \"Yemen, Rep.\"\n        },\n        {\n            \"iso2code\": \"za\",\n            \"name\": \"South Africa\"\n        },\n        {\n            \"iso2code\": \"zm\",\n            \"name\": \"Zambia\"\n        },\n        {\n            \"iso2code\": \"zw\",\n            \"name\": \"Zimbabwe\"\n        }\n    ];","export function getImageColorData(canvas) {\n    const quality = 10;\n    const filterRate = 0.025 / quality;\n    \n    // Retrieve all pixel's color information from image\n    const pixelCount = canvas.width * canvas.height;\n    const allPixelColorList = getImagePixelArrayFromCanvas(canvas, pixelCount, quality);\n    \n    // Convert [r, g, b] to #000000 array\n    const allPixelColorNameList = allPixelColorList.map((rgbList) => rgb2hex(rgbList));\n    \n    // Grouped and count each colors\n    const countedColorDataObject = allPixelColorNameList.reduce((total, value) => {\n        total[value] = (total[value] || 0) + 1;\n        return total;\n    }, {});\n    const countedColorDataList = Object.entries(countedColorDataObject).map(([color, count]) => {\n        const area = count / pixelCount * quality;\n        return {color, count, pixelCount, area}\n    });\n    \n    // Sort\n    const countedColorDataListSorted = countedColorDataList.sort((a, b) => {\n        return b.count - a.count;\n    });\n    // console.log(countedColorDataListSorted);\n    // console.log(pixelCount);\n    \n    // Filter at least N% of area that color draw\n    return countedColorDataListSorted.filter(v => v.count >= pixelCount * filterRate);\n}\n\nfunction getImagePixelArrayFromCanvas(canvas, pixelCount, quality) {\n    const ctx = canvas.getContext('2d');\n    const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    return createPixelArray(imgData.data, pixelCount, quality);\n}\n\nfunction createPixelArray(pixels, pixelCount, quality) {\n    const pixelArray = [];\n    \n    for (let i = 0, offset, r, g, b; i < pixelCount; i = i + quality) {\n    // for (let i = 0, offset, r, g, b, a; i < pixelCount; i = i + quality) {\n        offset = i * 4;\n        r = pixels[offset];\n        g = pixels[offset + 1];\n        b = pixels[offset + 2];\n        // a = pixels[offset + 3]; // Unused because flag has no opaque... I think\n        \n        pixelArray.push([r, g, b]);\n    }\n    return pixelArray;\n}\n\nfunction rgb2hex(rgb) {\n    return \"#\" + rgb.map(function (value) {\n        return (\"0\" + value.toString(16)).slice(-2);\n    }).join(\"\");\n}\n","import * as svgson from 'svgson';\nimport shuffle from 'shuffle-array';\n\nconst SVG_WIDTH = 1600;\nconst SVG_HEIGHT = 900;\n\n// Root SVG element\nconst SVG_ROOT_TEMPLATE = {\n    name: 'svg',\n    type: 'element',\n    value: '',\n    attributes: {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        version: \"1.1\",\n        width: SVG_WIDTH,\n        height: SVG_HEIGHT,\n    },\n    children: [\n        {\n            name: \"rect\",\n            type: \"element\",\n            value: '',\n            attributes: {\n                x: 0,\n                y: 0,\n                width: SVG_WIDTH,\n                height: SVG_HEIGHT,\n                fill: \"#FFFFFF\" // Background color is white\n            },\n            children: [],\n        }\n    ]\n}\n\nconst SVG_RECT_TEMPLATE = {\n    name: \"rect\",\n    type: \"element\",\n    value: '',\n    attributes: null,\n    children: [],\n};\n\n/**\n * Draw each color by same height and length without white\n */\nexport function generate1(isHorizontalBorder, colorList) {\n    // Filter colors without white and shuffle colors\n    const colors = shuffle(colorList.filter(v => v.toUpperCase() !== '#FFFFFF'));\n    \n    // Calculate white color size and each color's size\n    const baseLength = isHorizontalBorder ? SVG_HEIGHT : SVG_WIDTH;\n    const whiteColorLen = baseLength / colors.length * 0.25;\n    const eachColorLen = (baseLength - (whiteColorLen * (colors.length - 1))) / colors.length;\n    \n    const root = deepCopy(SVG_ROOT_TEMPLATE);\n    for (let i = 0; i < colors.length; i++) {\n        const rect = deepCopy(SVG_RECT_TEMPLATE);\n        rect.attributes = {\n            x: isHorizontalBorder ? 0 : i * eachColorLen + i * whiteColorLen,\n            y: isHorizontalBorder ? i * eachColorLen + i * whiteColorLen : 0,\n            width: isHorizontalBorder ? SVG_WIDTH : eachColorLen,\n            height: isHorizontalBorder ? eachColorLen : SVG_HEIGHT,\n            fill: colors[i],\n        };\n        root.children.push(rect);\n    }\n\n    return svgson.stringify(root);\n}\n\nexport function generate2(isHorizontalBorder, flagAndColorDataList) {\n    // Retrieve color and filling rate on flag without white\n    let colorAndAreaRateList = [];\n    flagAndColorDataList.map((flagAndColorData) => {\n        const colorDataList = flagAndColorData.colorData.filter(v => v.color.toUpperCase() !== '#FFFFFF');\n        colorDataList.map((v) => {\n            colorAndAreaRateList.push({color: v.color, area: v.area});\n        });\n    });\n    colorAndAreaRateList = shuffle(colorAndAreaRateList);\n    \n    // Calculate white color length and another colors total length\n    const baseLength = isHorizontalBorder ? SVG_HEIGHT : SVG_WIDTH;\n    const whiteColorLen = baseLength / colorAndAreaRateList.length * 0.25;\n    const colorsTotalLen = baseLength - (colorAndAreaRateList.length - 1) * whiteColorLen;\n    \n    // Calculate color fill rate\n    const totalArea = colorAndAreaRateList.reduce((total, value) => total + value.area, 0);\n    for (let i = 0; i < colorAndAreaRateList.length; i++) {\n        colorAndAreaRateList[i].fillRate = colorAndAreaRateList[i].area / totalArea;\n    }\n    \n    const root = deepCopy(SVG_ROOT_TEMPLATE);\n    let colorLenTotal = 0;\n    for (let i = 0; i < colorAndAreaRateList.length; i++) {\n        const rect = deepCopy(SVG_RECT_TEMPLATE);\n        const colorLen = Math.round(colorsTotalLen * colorAndAreaRateList[i].fillRate);\n        rect.attributes = {\n            x: isHorizontalBorder ? 0 : colorLenTotal + i * whiteColorLen,\n            y: isHorizontalBorder ? colorLenTotal + i * whiteColorLen : 0,\n            width: isHorizontalBorder ? SVG_WIDTH : colorLen,\n            height: isHorizontalBorder ? colorLen : SVG_HEIGHT,\n            fill: colorAndAreaRateList[i].color,\n        };\n        colorLenTotal += colorLen;\n        root.children.push(rect);\n    }\n    \n    return svgson.stringify(root);\n}\n\nfunction deepCopy(org) {\n    return JSON.parse(JSON.stringify(org));\n}\n","import { useState, useEffect } from \"react\";\nimport Canvg from 'canvg';\nimport ReactGA from 'react-ga';\nimport FlagsData from \"./FlagsData\";\nimport * as ImageDetermine from \"./ImageDetermine\";\nimport * as FlagGen from \"./FlagGenerator\";\n\nconst CANVAS_FLAG_WIDTH = 120;\n\nfunction MashupFlags() {\n    const [flagsData, setFlagsData] = useState([]);\n    const [selectedFlagsData, setSelectedFlagsData] = useState([]);\n    const [selectedFlagsColorData, setSelectedFlagsColorData] = useState([]);\n    \n    // When page load complete\n    useEffect(() => {\n        FlagsData.getAllNationalFlags().then((data) => {\n            setFlagsData(data.data);\n        });\n    }, []);\n    \n    // When selected flags\n    useEffect(() => {\n        // console.log(selectedFlagsData);\n    \n        // Draw flag SVG image to the canvas for image manipulating\n        selectedFlagsData.forEach((flagData) => {\n            const canvas = document.getElementById('canvas_' + flagData.iso2code);\n            const ctx = canvas.getContext('2d');\n            Canvg.from(ctx, process.env.PUBLIC_URL + '/flags/' + flagData.iso2code + '.svg').then((canvg) => {\n                canvg.render().then(() => { tidyCanvasElement(canvas, CANVAS_FLAG_WIDTH) })\n            });\n        });\n    }, [selectedFlagsData]);\n    \n    // Create TR country node\n    const createCountryTr = (flagData) => {\n        // When countries table selected\n        const onCountryRowClick = () => {\n            if (selectedFlagsData.indexOf(flagData) >= 0) {\n                // Remove\n                setSelectedFlagsData(selectedFlagsData.filter(v => flagData !== v));\n            } else {\n                // Add\n                setSelectedFlagsData([...selectedFlagsData, flagData]);\n            }\n        }\n        \n        // Check if this country is in selected list\n        let isSelected = false;\n        if (selectedFlagsData.indexOf(flagData) >= 0) {\n            isSelected = true;\n        }\n    \n        return (\n            <tr key={flagData.iso2code}\n                onClick={() => { onCountryRowClick(); }}\n                className={isSelected ? 'is-selected' : ''}\n            >\n                <td>{flagData.name}</td>\n            </tr>\n        );\n    }\n    \n    // When analyze color button pressed\n    const onAnalyzeColorsButtonPressed = () => {\n        const newSelectedFlagsColorData  = [];\n        selectedFlagsData.forEach((flagData) => {\n            newSelectedFlagsColorData.push({\n                flagData: flagData,\n                colorData: ImageDetermine.getImageColorData(document.getElementById('canvas_' + flagData.iso2code)),\n            });\n        });\n        setSelectedFlagsColorData(newSelectedFlagsColorData);\n    };\n    \n    // When generate1 flags button pressed\n    const onGenerateFlagsButtonPressed = (isHorizontalBorder = false) => {\n        ReactGA.event({\n            category: 'Flags',\n            action: 'Generate new mashup flags'\n        });\n        \n        const drawCanvas = (canvasId, svg) => {\n            const canvas = document.getElementById(canvasId);\n            const ctx = canvas.getContext('2d');\n            Canvg.from(ctx, svg).then((canvg) => {\n                canvg.render().then(() => { tidyCanvasElement(canvas, CANVAS_FLAG_WIDTH) })\n            });\n        };\n        \n        // Pattern 1\n        const colors = []\n        selectedFlagsColorData.map((flagsData) => {\n            flagsData.colorData.map((colorData) => {\n                colors.push(colorData.color);\n            });\n        });\n        drawCanvas('canvas_generated_1', FlagGen.generate1(isHorizontalBorder, colors));\n        \n        // Pattern 2\n        drawCanvas('canvas_generated_2', FlagGen.generate2(isHorizontalBorder, selectedFlagsColorData));\n    };\n    \n    const tidyCanvasElement = (canvas, width) => {\n        // Modify display size based on the canvas (=svg) size\n        canvas.style.width = width + 'px';\n        canvas.style.height = (canvas.height * width / canvas.width) + 'px';\n        canvas.style.border = \"1px solid gray\";\n    }\n    \n    return (\n        <div className=\"columns\">\n            <div className=\"column\">\n                <strong>Select countries</strong>\n                <div className=\"table-container\" style={{height:\"18rem\",overflowY:\"scroll\"}}>\n                    <table className=\"table is-bordered is-striped is-narrow is-hoverable\">\n                        <tbody>\n                        {flagsData.map((flagData) => { return createCountryTr(flagData) })}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n            \n            <div className=\"column\">\n                <strong>Selected countries</strong>\n                <br/>\n                <button\n                    onClick={onAnalyzeColorsButtonPressed}\n                    className=\"button is-small is-primary is-outlined\">Analyze colors</button>\n                \n                {selectedFlagsData.map((flagData) =>\n                    <div key={\"selected_\" + flagData.iso2code}>\n                        <h4>{flagData.name}</h4>\n                        <canvas id={\"canvas_\" + flagData.iso2code} />\n                    </div>\n                )}\n            </div>\n            \n            <div className=\"column\">\n                <strong>Selected flags color data</strong>\n                <br/>\n                <button onClick={() => onGenerateFlagsButtonPressed(true)}\n                        className=\"button is-small is-primary is-outlined\">Generate H flags</button>\n                <button onClick={() => onGenerateFlagsButtonPressed(false)}\n                        className=\"button is-small is-primary is-outlined\">Generate V flags</button>\n                \n                {selectedFlagsColorData.map((flagDataAndColorData) =>\n                    <div key={\"selected_analyzed_\" + flagDataAndColorData.flagData.iso2code}>\n                        <h4>{flagDataAndColorData.flagData.name}</h4>\n                        <div>\n                            {flagDataAndColorData.colorData.map(colorData => (\n                                <div key={\"color_sample_\" + flagDataAndColorData.flagData.iso2code + \"_\" + colorData.color}>\n                                    <span style={{border:\"1px solid gray\", backgroundColor:colorData.color}}>&nbsp;&nbsp;&nbsp;&nbsp;</span>\n                                    <span> {colorData.color}, {Math.round(colorData.area * 100)}%</span>\n                                </div>\n                            ))}\n                        </div>\n                        <hr style={{margin:0,marginBottom:'1rem'}}/>\n                    </div>\n                )}\n            </div>\n            \n            <div className=\"column\">\n                <strong>Generated mashup flags</strong>\n                <br/>\n                <button\n                    onClick={() => onGenerateFlagsButtonPressed(true)}\n                    className=\"button is-small is-primary is-outlined\">Re-generate H</button>\n                <button\n                    onClick={() => onGenerateFlagsButtonPressed(false)}\n                    className=\"button is-small is-primary is-outlined\">Re-generate V</button>\n                <div>\n                    <div>\n                        <h4>Pattern 1</h4>\n                        <canvas id=\"canvas_generated_1\" />\n                    </div>\n                    <div>\n                        <h4>Pattern 2</h4>\n                        <canvas id=\"canvas_generated_2\" />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default MashupFlags;\n","import {useEffect} from \"react\";\nimport ReactGA from 'react-ga';\nimport MashupFlags from \"./MashupFlags\";\n\nReactGA.initialize('UA-199628575-1');\nReactGA.pageview(window.location.pathname + window.location.search);\n\nfunction App() {\n    useEffect(() => {\n        ReactGA.pageview('/');\n    }, []);\n    \n    return (\n        <div>\n            <section className=\"hero is-dark\">\n                <div className=\"hero-body\">\n                    <div className=\"container\">\n                        <h1 className=\"title\">[WIP]National Diversity Barcodes</h1>\n                    </div>\n                </div>\n            </section>\n            \n            <section className=\"section\">\n                <div className=\"container \">\n                    <MashupFlags/>\n                </div>\n            </section>\n    \n            <footer className=\"footer\">\n                <div className=\"content has-text-centered\">\n                    ConnectionWorks Inc.\n                </div>\n            </footer>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.min.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}